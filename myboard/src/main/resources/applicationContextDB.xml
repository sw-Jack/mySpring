<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="lee.spring.web"></context:component-scan>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- Database 등록 -->
	<!-- DB 개인 정보가 들어있어 코드 상에서 노출되기 때문에 properties 파일을 별도로 만들어 해당 파일에서 값을 불러옴 -->
	<!-- spring 프로젝트에서 classpath는 src/main/resources/ 경로를 말함 -->
	<context:property-placeholder location="classpath:config/database.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- JdbcTemplate 클래스 bean 등록 및 의존성 주입 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- JdbcTemplate 클래스에는 setDataSource() 메서드가 내포되어 있음 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 트랜잭션 관리자 등록 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 트랜잭션 advice 등록 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/> <!-- get으로 시작하는 메서드는 읽기 전용으로 처리, 관리 대상에서 제외 -->
			<tx:method name="*"/> <!-- get으로 시작하는 메서드를 제외한 나머지 모든 메서드는 트랜잭션 관리 대상에 포함 -->
		</tx:attributes>
	</tx:advice>
	<!-- AOP 설정을 통한 트랜잭션 적용 : 적용을 해줘야 동작(앞 과정은 동작을 위한 설정 과정) -->
	<aop:config>
		<aop:pointcut expression="execution(* lee.spring.web..*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
</beans>
